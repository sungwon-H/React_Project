{"version":3,"sources":["components/TodoTemplate.js","components/TodoDate.js","components/TodoTitle.js","TodoContext.js","components/TodoTask.js","components/TodoCreate.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","TodoDate","dateString","Date","toLocaleDateString","year","month","day","className","TodoTitle","initialTodos","id","text","done","imp","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoTaskBlock","TodoTask","todos","undoneTasks","undoneImport","color","length","CircleButton","button","props","open","css","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","onClick","TodoHeadBlock","TodoHead","console","log","Remove","Import","TodoItemBlock","CheckCircle","Text","TodoItem","TodoListBlock","TodoList","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a289fcc.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n\r\n    width: 512px;\r\n    height: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 200px;\r\n    margin-bottom: 32px;\r\n    background: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 16px;\r\n    box-shadow: 4px 6px 3px 2px  #787878;\r\n\r\n`;\r\n\r\nfunction TodoTemplate({children}){\r\n    return(\r\n        <TodoTemplateBlock>\r\n            {children}\r\n        </TodoTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate;","import React from 'react';\r\nimport \"./TodoDate.scss\";\r\n\r\nfunction TodoDate(){\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n    return(\r\n        \r\n            <div className=\"TodoDate\">{dateString}</div>\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default TodoDate;","import React from 'react';\r\nimport \"./TodoTitle.scss\";\r\n\r\nfunction TodoTitle(){\r\n    return(\r\n        \r\n            <div className=\"TodoTitle\">TO DO LIST</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoTitle;","import React, {useReducer, createContext, useContext, useRef} from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n      id: 1,\r\n      text: '알고리즘 문제해결',\r\n      done: false,\r\n      imp:false \r\n    },\r\n    {\r\n      id: 2,\r\n      text: '리액트 복습',\r\n      done: true,\r\n      imp:false \r\n    },\r\n    {\r\n      id: 3,\r\n      text: '잠자기',\r\n      done: true,\r\n      imp:false \r\n    },\r\n    {\r\n      id: 4,\r\n      text: '프로젝트 구상',\r\n      done: false,\r\n      imp:true \r\n    }\r\n  ];\r\n\r\n  function todoReducer(state, action){\r\n      switch (action.type){// action.type에 따라 다른 작업 수행\r\n        case 'CREATE':\r\n              return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(todo => // 반복되는 컴포넌트를 렌더링 map함수는 파라미터로 전달된 함수를 사용해서 배열 내 각 요소를 원하는 규칙에 따라 변환한 후, 그 결과로 새로운 배열을 생성\r\n                todo.id === action.id ? {...todo, done: !todo.done}:todo);\r\n        case 'IMPORT':\r\n            return state.map(todo =>\r\n              todo.id === action.id ? {...todo, imp:  !todo.imp}:todo);\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n      }\r\n  }\r\n\r\n  const TodoStateContext = createContext();\r\n  const TodoDispatchContext = createContext();\r\n  const TodoNextIdContext = createContext();\r\n \r\nexport function TodoProvider({children}){\r\n  \r\n      const [state, dispatch] = useReducer(todoReducer, initialTodos); // state는 현재를 가리키고 dispatch는 액션을 발생 시킨다 \r\n      const nextId = useRef(5); // 다음에 만들어지는 nextId는 새로운 항목이 추가될 경우 고유 id가 붙게 된다.\r\n      return(\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n            <TodoNextIdContext.Provider value={nextId}>\r\n              {children}  \r\n            </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n      );\r\n  }\r\n\r\n  //useContext 커스텀 훅 사용\r\n  export function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n      throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n  }\r\n  \r\n  export function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n    }\r\n  return context;\r\n\r\n  }\r\n\r\n  export function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n  }","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {MdStar} from 'react-icons/md';\r\nimport { useTodoState } from '../TodoContext';\r\nconst TodoTaskBlock = styled.div`\r\ndisplay:flex;\r\njustify-content: space-between;\r\n\r\n.tasks-important{\r\n    font-size: 21px;\r\n    font-weight:bold;\r\n    color: #323232; \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n}\r\n\r\n\r\n.tasks-left{\r\n    font-size: 18px;\r\n    font-weight:bold;\r\n    color: #F49F5B;\r\n    \r\n}\r\n`\r\n\r\nfunction TodoTask(){\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n    const undoneImport = todos.filter(todo => todo.imp)\r\n    return(\r\n        <TodoTaskBlock>\r\n            <div className=\"tasks-important\">\r\n            <MdStar color= \"#f0f351\"/>{undoneImport.length}\r\n                </div>\r\n            <div className=\"tasks-left\">남은 할 일 {undoneTasks.length} 개</div>\r\n        </TodoTaskBlock>\r\n    )\r\n}\r\nexport default TodoTask;","import React, {useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {MdAdd} from 'react-icons/md';\r\nimport {useTodoDispatch, useTodoNextId}from '../TodoContext';\r\nconst CircleButton = styled.button`\r\n  \r\n    background: #F49551;\r\n    &:hover { \r\n    background: #F5AF64;\r\n    transform: rotate(45deg);\r\n    }\r\n    &:active {\r\n    background: #F49551;\r\n    }\r\n\r\n   z-index:5;\r\n    width: 40px; // 너비\r\n    height: 40px; // 높이\r\n    font-size: 60px; //  +두께\r\n    color:white;\r\n    border-radius: 50%; // 둥글게\r\n    position: relative; // 아이콘 위치 변경\r\n    top: 20%; // 아이콘 아래로\r\n    left : 90%; // 아이콘 왼쪽으로 90\r\n    border: none; // 테두리x\r\n    outline: none; // 테두리 x\r\n\r\n    // 아이콘 + 위치\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.125s all ease-in; // 모양변화속도\r\n\r\n    ${props =>\r\n        props.open &&\r\n        css`\r\n          background: #288CFF;\r\n          &:hover {\r\n            background: #50C8FF;\r\n            transform: rotate(45deg);\r\n          }\r\n          &:active {\r\n            background: #288CFF;\r\n          }\r\n          \r\n          border-radius: 10%; // 둥글게\r\n\r\n        `}\r\n`;\r\nconst InsertFormPositioner = styled.div` // 입력 폼 1번째 \r\n    display:flex;\r\n    width: 383px;\r\n    top:395px;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form` // 입력폼 2번째\r\n   \r\n    \r\n    background: #f8f9fa;\r\n    padding-right:10px;\r\n    padding-left:10px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    border-radius: 5%;\r\n\r\n`;\r\nconst Input = styled.input` // 3번째 입력폼\r\n\r\n  padding-top:10px;\r\n  padding-bottom:10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 383px;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\n\r\nfunction TodoCreate(){\r\n    const [open, setOpen] = useState(false); \r\n    const [value, setValue] = useState('');\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n      e.preventDefault(); // 새로고침 방지\r\n      dispatch({\r\n        type: 'CREATE',\r\n        todo: {\r\n          id: nextId.current,\r\n          text: value,\r\n          done: false\r\n        }\r\n      });\r\n      setValue('');\r\n      setOpen(false);\r\n      nextId.current += 1;\r\n    };\r\n\r\n    return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              autoFocus\r\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n              onChange={onChange}\r\n              value={value}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoCreate;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoDate from './TodoDate';\r\nimport TodoTitle from './TodoTitle';\r\nimport TodoTask from './TodoTask';\r\nimport TodoCreate from './TodoCreate';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    \r\n    height:280px;\r\n    padding-top:10px;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #c8c8c8;\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    console.log(todos);\r\n    return(\r\n        <TodoHeadBlock>\r\n            <TodoDate/>\r\n            <TodoTitle/>\r\n            <TodoTask/>\r\n            <TodoCreate/>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled,{css} from 'styled-components';\r\nimport { MdDone, MdDelete, MdStar } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext'; // 액션 발생\r\n\r\n// 삭제\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n    color: #ff6b6b;\r\n    }\r\n    display:none;\r\n`;\r\n\r\n// 중요표시\r\nconst Import = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    margin-right: 10px; \r\n    \r\n    &:hover {\r\n    color: #f0f351;\r\n    }\r\n    display:none;\r\n\r\n    ${props =>\r\n      props.imp &&\r\n      css`\r\n        display:block;\r\n        color: #f0f351;\r\n      \r\n        \r\n      `}\r\n`;\r\n\r\n\r\n// 아이템 블록\r\nconst TodoItemBlock = styled.div`\r\n  \r\n  display: flex;\r\n  \r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n    \r\n    \r\n  \r\n  \r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n    ${Import} {\r\n        display: initial;\r\n        \r\n      }\r\n  }\r\n\r\n`;\r\n//체크버튼 \r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  \r\n  &:hover{\r\n    background:#f8f9fa;\r\n  }\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border-radius: 16px;\r\n      background: #ffd43b;\r\n      border: 1px solid #ffd43b;\r\n      \r\n    `}\r\n\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  \r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\n\r\n\r\n\r\nfunction TodoItem({id, imp, done, text,}){\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onImport = () => dispatch({ type: 'IMPORT', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n\r\n    return(\r\n     \r\n        <TodoItemBlock>\r\n            <CheckCircle done={done} onClick={onToggle}>\r\n              {done && <MdDone/>}\r\n              </CheckCircle>\r\n\r\n            <Text done={done}>{text}</Text>\r\n\r\n            <Import imp={imp} onClick={onImport}>\r\n                <MdStar/>\r\n            </Import>\r\n\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete/>\r\n            </Remove>\r\n\r\n        </TodoItemBlock>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock= styled.div`    \r\n    flex: 1; // 해당 태그가 차지할 수 있는 영역을 꽉 채우도록 설정\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n  \r\n    \r\n   \r\n`;\r\n\r\n\r\nfunction TodoList(){\r\n    const todos = useTodoState();\r\n\r\n    return(\r\n        <TodoListBlock>\r\n            \r\n            {todos.map(todo => (\r\n                <TodoItem\r\n                key={todo.id}\r\n                id={todo.id}\r\n                text={todo.text}\r\n                done={todo.done}\r\n                imp={todo.imp}\r\n            />\r\n            ))}\r\n         \r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport {createGlobalStyle} from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead'\nimport TodoList from './components/TodoList';\nimport {TodoProvider} from './TodoContext';\n\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n      background: #f1f3f5;\n    }\n`;\n\nfunction App(){\n  return(\n    <TodoProvider>\n    <GlobalStyle/>\n    <TodoTemplate>\n      <TodoHead/>\n      <TodoList/>\n    </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}